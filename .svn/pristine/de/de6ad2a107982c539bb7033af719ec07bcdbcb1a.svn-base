webpackJsonp(["main"],{

/***/ "../../../../../src/$$_lazy_route_resource lazy recursive":
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "../../../../../src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "../../../../../src/app/app.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".title-line{\r\n  margin: 20px 150px;\r\n}\r\n.shop-info-content,.facility-content{\r\n  padding: 10px 150px;\r\n}\r\n.block{\r\n  display: block;\r\n /* margin-top: 20px;*/\r\n}\r\nlabel{\r\n  width: 105px;\r\n  display: inline-block;\r\n  text-align: right;\r\n}\r\n.line-name{\r\n  display: inline-block;\r\n  text-align: right;\r\n  margin-right: 10px;\r\n}\r\n.divider{\r\n  margin:0px 5px;\r\n}\r\n.required-tag{\r\n  color: red;\r\n}\r\n.not-finished,.light-weight-grey{\r\n  color:#898990;\r\n}\r\n.model-popup,.add-item,.edit-info{\r\n  color: #467ac1;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n}\r\n.inline-input{\r\n  display: inline-block;\r\n  width:160px;\r\n}\r\n.input-style{\r\n  width: 160px;\r\n}\r\n.select-style{\r\n  display: inline-block;\r\n  width: 160px;\r\n}\r\n\r\n.nav-tabs .nav-item .nav-link{\r\n  color: #495057;\r\n}\r\n\r\n.add-popup-btn{\r\n  width: 220px;\r\n}\r\n.selected-span{\r\n  color: red;\r\n}\r\n/*店名*/\r\n.brand-name{\r\n  color: red;\r\n}\r\n.input-label-name{\r\n  font-size: 16px;\r\n  line-height: 38px;\r\n}\r\n.shop-name-input,.brand-name-input,.subshop-name{\r\n  display: inline-block;\r\n  width: 10%;\r\n}\r\n.checkbox-style{\r\n  display: inline-block;\r\n  margin-left: 15px;\r\n}\r\n\r\n.brand-name-block{\r\n  margin-top: 10px;\r\n}\r\n/*经营行业*/\r\n#big-industry,#small-industry{\r\n  display: inline-block;\r\n  width: 8%;\r\n}\r\n\r\n/*营业时间*/\r\n.tab-block{\r\n  display: inline-block;\r\n  width: 50%;\r\n  vertical-align: middle;\r\n}\r\n.week-list{\r\n  padding: 10px 0px;\r\n}\r\n.week-item{\r\n  margin:0px 8px;\r\n}\r\n.week-checkbox{\r\n  margin-right: 3px;\r\n}\r\n.time-input{\r\n  padding-left: 10px;\r\n  margin:0px 5px;\r\n}\r\n\r\n/*提供服务*/\r\n.service-list{\r\n  display: inline-block;\r\n  width: 300px;\r\n  padding: 8px 0px;\r\n}\r\n.service-item{\r\n  margin:0px 8px;\r\n  display: inline-block;\r\n  width: 80px;\r\n}\r\n/*店铺租金*/\r\n.rent-input{\r\n  width: 20%;\r\n  display: inline-block;\r\n}\r\n/*支付方式*/\r\n.pay-way-list{\r\n  display: inline-block;\r\n  width: 80%;\r\n}\r\n.pay-way-item{\r\n  padding: 10px 0px;\r\n  margin:0px 10px;\r\n}\r\n\r\n/*租金弹出框*/\r\n.rate{\r\n  display: inline-block;\r\n}\r\n.select-radio{\r\n  margin-right: 3px;\r\n}\r\n.select-span{\r\n /* padding: 10px 0px;*/\r\n  margin:10px 10px;\r\n  display: inline-block;\r\n}\r\n\r\n/*营业额*/\r\n.profit{\r\n  margin-right: 10px;\r\n}\r\n\r\ntextarea{\r\n  vertical-align: middle;\r\n}\r\n\r\n/*证件照*/\r\n.photos-list{\r\n  display: inline-block;\r\n}\r\n\r\n/*物业建筑信息*/\r\n.left-inline-block,.right-inline-block{\r\n  display: inline-block;\r\n  width: 350px;\r\n}\r\n/*适合经营*/\r\n.span-list-item{\r\n  width: 75px;\r\n  display: inline-block;\r\n}\r\n.span-list-item i{\r\n  margin-left: 10px;\r\n}\r\n\r\n/*物业配套*/\r\n.facilities-list{\r\n  display: inline-block;\r\n  width: 500px;\r\n  padding: 8px 0px;\r\n}\r\n.facility-item{\r\n  display: inline-block;\r\n  width: 100px;\r\n}\r\n/*费用成本*/\r\n.fee-left-inline-block,.fee-right-inline-block{\r\n  display: inline-block;\r\n}\r\n.fee-left-inline-block label,.fee-right-inline-block label{\r\n  width: 50px;\r\n}\r\n\r\n/*店铺证件*/\r\n.shop-certifications{\r\n  display: inline-block;\r\n  list-style: none;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  padding-top: 6px;\r\n}\r\n.shop-certifications li{\r\n  display: block;\r\n}\r\n.add-certifications-btn{\r\n  margin-top: 5px;\r\n}\r\n.certification-list{\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n\r\n.upload-block-inline{\r\n  display: inline-block;\r\n  text-align: center;\r\n  width: 80px;\r\n}\r\n\r\n/*行业选择弹出框*/\r\n.popup-industry-list{\r\n  list-style: none;\r\n}\r\n.popup-industry-list li{\r\n  padding-left: 80px;\r\n  margin-top: 15px;\r\n}\r\n.big-industry-style{\r\n  display: inline-block;\r\n  width: 100px;\r\n  text-align: right;\r\n  margin-left: -100px;\r\n}\r\n.small-industry-style{\r\n  display: inline-block;\r\n  margin:0px 10px;\r\n}\r\n\r\n/*个人信息弹出框*/\r\n\r\n/*行业列表弹出框*/\r\n\r\n.industry-selected-span{\r\n  border: 1px solid black;\r\n  margin-left: 10px;\r\n  padding: 0px 5px;\r\n}\r\n.industry-selected-span i{\r\n  margin-left: 10px;\r\n}\r\n/*店铺图片*/\r\n.upload-block{\r\n  display: inline-block;\r\n}\r\n.old-images-block{\r\n  display: inline-block;\r\n  width: 100px;\r\n  position: relative;\r\n}\r\n.new-image-block{\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  width: 45px;\r\n  height: 48px;\r\n  overflow: hidden;\r\n}\r\n.upload-btn{\r\n  line-height: 55px;\r\n  margin-top: -3px;\r\n  margin-left: -3px;\r\n  font-size: 50px;\r\n  width: 50px;\r\n  height: 50px;\r\n  color: #a9a9a9;\r\n}\r\n.img-item-box img{\r\n  width: 100px;\r\n}\r\n\r\n.upload-block i{\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 5px;\r\n  font-size: 20px;\r\n}\r\n.release-btn{\r\n  display: block;\r\n  margin: 0 auto;\r\n}\r\n\r\n/*baidu-map*/\r\n.baidu-map{\r\n  width: 450px;\r\n  height: 320px;\r\n  display: block;\r\n\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 10%;\r\n}\r\n.baidu-map-cancel{\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 5px;\r\n  font-size: 20px;\r\n}\r\n\r\n.map-btn-control{\r\n  display: inline-block;\r\n  width: 20%;\r\n  margin-left: 20%;\r\n  margin-top: 15px;\r\n}\r\n\r\n\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/app.component.html":
/***/ (function(module, exports) {

module.exports = "<form action=\"\" #shopInfoForm=\"ngForm\">\r\n  <h3 class=\"title-line\">店铺信息</h3>\r\n  <div class=\"shop-info-content\">\r\n    <!--店名-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n        class=\"input-label-name \">店名:</span></label>\r\n      <input class=\"form-control  inline-input\" type=\"text\" required [disabled]=\"isBrandName\" maxlength=\"5\"\r\n             placeholder=\"请输入\"\r\n             [(ngModel)]=\"shopName\" name=\"shopName\">\r\n      <input class=\"checkbox-style\" type=\"checkbox\" [(ngModel)]=\"isBrandName\" name=\"isBrandName\">\r\n      <span class=\"input-label-name\">品牌店铺</span>\r\n\r\n      <div *ngIf=\"isBrandName\" class=\"brand-name-block\">\r\n        <p><label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n          class=\"input-label-name\">品牌名称：</span></label>\r\n          <input class=\"form-control brand-name-input\" name=\"brandName\" type=\"text\" [(ngModel)]=\"brandName\"\r\n                 (ngModelChange)=\"updateShopName()\" required\r\n                 placeholder=\"请输入\" maxlength=\"30\">\r\n        </p>\r\n        <p><label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n          class=\"input-label-name\">分店名：</span></label>\r\n          <input class=\"form-control subshop-name\" name=\"subShopName\" type=\"text\" [(ngModel)]=\"subShopName\" required\r\n                 placeholder=\"请输入\" maxlength=\"10\" (ngModelChange)=\"updateShopName()\">\r\n        </p>\r\n        <p><label for=\"\" class=\"line-name\"><span class=\"input-label-name\">运营模式：</span></label>\r\n          <select class=\"form-control select-style\" name=\"operateType\" id=\"\" [(ngModel)]=\"operateType\">\r\n            <option value=\"\">请选择</option>\r\n            <option value=\"item.code\" *ngFor=\"let item of operateMode\">{{item.name}}</option>\r\n          </select>\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!--经营行业-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n        class=\"input-label-name\">经营行业:</span></label>\r\n      <select class=\"form-control select-style\" name=\"bigIndustry\" id=\"big-industry\" [(ngModel)]=\"bigIndustry\"\r\n              (ngModelChange)=\"loadSmallIndustry(bigIndustry)\">\r\n        <option value=\"\">请选择</option>\r\n        <option value=\"{{item.code}}\" *ngFor=\"let item of bigIndustryList\">{{item.name}}</option>\r\n      </select>\r\n      <select class=\"form-control select-style\" name=\"smallIndustry\" id=\"small-industry\" [(ngModel)]=\"smallIndustry\">\r\n        <option value=\"\">请选择</option>\r\n        <option value=\"{{item.code}}\" *ngFor=\"let item of smallIndustryList\">{{item.name}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!--开业时间-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">开业日期:</span></label>\r\n      <app-date-picker [date]=\"startOpenDate\" (dateChange)=\"getStartTime($event)\"></app-date-picker>\r\n    </div>\r\n\r\n    <!--经营状态-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">经营状态:</span></label>\r\n      <select class=\"form-control  select-style\" name=\"operateStatus\" id=\"operateStatus\" [(ngModel)]=\"operateStatus\">\r\n        <option value=\"{{item.code}}\" *ngFor=\"let item of operateStatusList\">{{item.name}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!--停业日期-->\r\n    <div class=\"block m-top-20\" *ngIf=\"operateStatus==2\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">停业日期:</span></label>\r\n      <app-date-picker [date]=\"endOpenDate\" (dateChange)=\"getEndTime($event)\"></app-date-picker>\r\n    </div>\r\n\r\n    <!--店铺图片-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">店铺图片:</span></label>\r\n      <div *ngFor=\"let item of shopImages\" class=\"old-images-block\">\r\n        <a class=\"img-item-box\" href=\"\">\r\n          <img src=\"{{item.url}}\" alt=\"\">\r\n        </a>\r\n      </div>\r\n      <span (click)=\"open(shopImageContent)\" class=\"model-popup\">编辑>></span>\r\n    </div>\r\n\r\n    <!--前台电话-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">前台电话:</span></label>\r\n      <input class=\"form-control inline-input\" name=\"shopPhoneNumber\" type=\"text\" placeholder=\"请填写\"\r\n             [(ngModel)]=\"shopPhoneNumber\" maxlength=\"20\">\r\n    </div>\r\n\r\n    <!--外卖电话-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">外卖电话:</span></label>\r\n      <input class=\"form-control inline-input\" name=\"takeOutPhone\" type=\"text\" placeholder=\"请填写\"\r\n             [(ngModel)]=\"takeOutPhone\" maxlength=\"20\">\r\n    </div>\r\n\r\n    <!--营业时间-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">营业时间:</span></label>\r\n      <ngb-tabset class=\"tab-block\">\r\n        <ngb-tab title=\"营业日\">\r\n          <ng-template ngbTabContent>\r\n            <p class=\"week-list\">\r\n              <span><input type=\"checkbox\" name=\"operateDate\" [(ngModel)]=\"wholeWeek\" (click)=\"selectAllWeek()\"\r\n                           class=\"m-ritght-5\">整周</span><span class=\"divider\">|</span>\r\n              <span *ngFor=\"let item of vaildTime\" class=\"week-item\"><input [(ngModel)]=\"item.checked\"\r\n                                                                            name=\"weekChecked\"\r\n                                                                            (click)=\"selectThisDay(item)\"\r\n                                                                            class=\"week-checkbox\" type=\"checkbox\"\r\n                                                                            data-code=\"item.code\">{{item.name}}</span>\r\n            </p>\r\n          </ng-template>\r\n        </ngb-tab>\r\n        <ngb-tab title=\"营业时段\">\r\n          <ng-template ngbTabContent>\r\n            <p class=\"week-list\">\r\n              <span><input type=\"checkbox\" [(ngModel)]=\"allDay\" name=\"operateTime\"\r\n                           (click)=\"selectAllDay()\">24小时</span><span\r\n              class=\"divider\">|</span>\r\n              <input class=\"form-control time-input inline-input\" name=\"startTime\" type=\"text\" placeholder=\"8:00\"\r\n                     [(ngModel)]=\"operateStartTime\">—<input class=\"form-control time-input inline-input\" name=\"endTime\"\r\n                                                            type=\"text\" placeholder=\"24:00\"\r\n                                                            [(ngModel)]=\"operateEndTime\">\r\n            </p>\r\n          </ng-template>\r\n        </ngb-tab>\r\n      </ngb-tabset>\r\n    </div>\r\n\r\n    <!--装修档次-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">装修档次:</span></label>\r\n      <select class=\"form-control  select-style\" name=\"fitmentLevel\" id=\"fitmentLevel\" [(ngModel)]=\"fitmentLevelStatus\">\r\n        <option value=\"\">请选择</option>\r\n        <option value=\"{{item.code}}\" *ngFor=\"let item of fitmentLevelList\">{{item.name}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!--提供服务-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">提供服务:</span></label>\r\n      <div class=\"service-list vertical-t\">\r\n        <span *ngFor=\"let item of serviceList\" class=\"service-item\"><input [(ngModel)]=\"item.checked\" name=\"serviceList\"\r\n                                                                           (click)=\"selectThisService(item)\"\r\n                                                                           class=\"week-checkbox\" type=\"checkbox\"\r\n                                                                           data-code=\"item.code\">{{item.name}}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!--店铺租金-->\r\n    <div class=\"block m-top-20\">\r\n      <label class=\"line-name\"><span class=\"input-label-name\">店铺租金:</span></label>\r\n      <input class=\"form-control inline-input\" name=\"shopRent\" type=\"text\" placeholder=\"6位整数+2位小数\"\r\n             [(ngModel)]=\"shopRent\"\r\n             pattern=\"\\d{1,4}\">\r\n      <select class=\"form-control  select-style\" name=\"shopRentMeasure\" id=\"rentMeasure\" [(ngModel)]=\"rentMeasure\">\r\n        <option value=\"{{item.code}}\" *ngFor=\"let item of rentMeasureList\">{{item.name}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!--支付方式-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">支付方式:</span></label>\r\n      <div class=\"pay-way-list vertical-t\">\r\n        <span *ngFor=\"let item of payWayList\" class=\"select-span\"><input [(ngModel)]=\"item.name\" name=\"payWayList\"\r\n                                                                         [value]=\"item.name\"\r\n                                                                         (click)=\"selectThisPayWay(item)\"\r\n                                                                         class=\"week-checkbox\" type=\"radio\"\r\n                                                                         data-code=\"item.code\">{{item.name}}</span>\r\n        <input class=\"form-control time-imput inline-input\" name=\"payWay\" type=\"text\" placeholder=\"请填写\"\r\n               [(ngModel)]=\"definedPayWay\" (ngModelChange)=\"definedPayChange()\">\r\n      </div>\r\n    </div>\r\n\r\n    <!--编辑更多租金内容-->\r\n    <div class=\"block m-top-20\">\r\n      <p class=\"model-popup\"><label for=\"\" class=\"line-name\"></label><span\r\n        (click)=\"openRentModal(rentContent)\">编辑更多租金内容</span>\r\n      </p>\r\n    </div>\r\n\r\n    <!--客单价-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">客单价:</span></label>\r\n      <input class=\"form-control profit inline-input\" type=\"text\" name=\"personProfit\" [(ngModel)]=\"personProfit\"\r\n             placeholder=\"请填写\">元\r\n    </div>\r\n\r\n    <!--日均营业额-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">日均营业额:</span></label>\r\n      <input class=\"form-control profit inline-input\" name=\"dayProfit\" [(ngModel)]=\"dayProfit\" type=\"text\"\r\n             placeholder=\"请填写\">元\r\n    </div>\r\n\r\n    <!--编辑更多营业状况内容-->\r\n    <div class=\"block m-top-20\">\r\n      <p class=\"model-popup\"><label for=\"\" class=\"line-name\"></label><span\r\n        (click)=\"open(profitContent)\">编辑更多营业状况内容</span></p>\r\n    </div>\r\n\r\n\r\n    <!--转让状态-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">转让状态:</span></label>\r\n      <div class=\"pay-way-list vertical-t\">\r\n        <span *ngFor=\"let item of transferStatusList;let i=index;\" class=\"select-span\"><input [(ngModel)]=\"item.name\"\r\n                                                                                              [value]=\"item.name\"\r\n                                                                                              name=\"transferStatus\"\r\n                                                                                              (click)=\"selectTransferStatus(item)\"\r\n                                                                                              class=\"week-checkbox\"\r\n                                                                                              type=\"radio\"\r\n                                                                                              data-code=\"item.value\">{{item.value_description}}</span>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!--转让费-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">转让费:</span></label>\r\n      <input class=\"form-control profit inline-input\" name=\"transferFee\" [(ngModel)]=\"transferFee\" type=\"text\"\r\n             placeholder=\"请填写\">元\r\n    </div>\r\n\r\n\r\n    <!--可否空转-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">可否空转:</span></label>\r\n      <div class=\"pay-way-list\">\r\n        <span *ngFor=\"let item of emptyTransferList\" class=\"select-span\"><input [(ngModel)]=\"item.name\"\r\n                                                                                name=\"isemptyTransfer\"\r\n                                                                                [value]=\"item.name\"\r\n                                                                                (click)=\"selectEmptyTransfer(item)\"\r\n                                                                                class=\"week-checkbox\" type=\"radio\"\r\n                                                                                data-code=\"item.code\">{{item.name}}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!--编辑更多转让内容-->\r\n    <div class=\"block m-top-20\">\r\n      <p class=\"model-popup\"><label for=\"\" class=\"line-name\"></label><span\r\n        (click)=\"open(transferContent)\">编辑更多转让内容</span></p>\r\n    </div>\r\n\r\n\r\n    <!--店铺证件-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">店铺证件:</span></label>\r\n      <ul *ngIf=\"certifications.length > 0\" class=\"shop-certifications vertical-t\">\r\n        <li *ngFor=\"let item of certifications\"><span class=\"light-weight-grey\">{{item.name}}</span><span\r\n          class=\"edit-info m-left-10 m-ritght-10\" (click)=\"openShopCertificationModal(certificationEdit,item)\">编辑</span><span\r\n          class=\"edit-info m-left-5 m-ritght-5\" (click)=\"deleteCertification(item)\">删除</span></li>\r\n      </ul>\r\n      <p class=\"add-certifications-btn add-popup-btn\" (click)=\"open(certificationEdit)\"><label\r\n        class=\"line-name\"></label><i class=\"iconfont icon-tianjiatupian m-ritght-5\"></i><span class=\"light-weight-grey\">添加证件</span>\r\n      </p>\r\n\r\n    </div>\r\n\r\n    <!--店铺老板-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">店铺老板:</span></label>\r\n      <span class=\"light-weight-grey\">{{shopBoss.name}}</span> <span class=\"edit-info\"\r\n                                                                     (click)=\"openPersonalInfo(personInfo,shopBoss)\">编辑</span>\r\n    </div>\r\n\r\n    <!--合伙人-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">合伙人:</span></label>\r\n      <div class=\"inline-block vertical-t\">\r\n        <p *ngFor=\"let item of partner\">\r\n          <span>{{item.name}}</span><span>{{item.phoneList[0]}}</span> <span class=\"edit-info\"\r\n                                                                             (click)=\"openPersonalInfo(personInfo,item)\">编辑</span>\r\n          <input type=\"text\" name=\"stockRatio\" placeholder=\"参股比例\" class=\"inline-input form-control\">\r\n        </p>\r\n      </div>\r\n      <p *ngIf=\"partner.length < 5\" class=\"add-partner-btn add-popup-btn\" (click)=\"addPartner()\"><label\r\n        class=\"line-name\"></label><i\r\n        class=\"iconfont icon-tianjiatupian m-ritght-5\"></i><span class=\"light-weight-grey\">添加合伙人</span></p>\r\n\r\n    </div>\r\n\r\n    <!--店铺员工-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">店铺员工:</span></label>\r\n      <div class=\"inline-block vertical-t\">\r\n        <p class=\"\" *ngFor=\"let item of employee\">\r\n          <input type=\"text\" placeholder=\"职位\" name=\"position\" class=\"inline-input form-control\"\r\n                 [(ngModel)]=\"item.position\"> <span\r\n\r\n          class=\"light-weight-grey\">姓名</span><span class=\"edit-info\"\r\n                                                   (click)=\"openPersonalInfo(personInfo,item)\">编辑</span>\r\n          <app-date-picker [date]=\"item.entryDate\" [placeholder]=\"entryTimePlaceHolder\"\r\n                           (dateChange)=\"getEntryDate($event)\"></app-date-picker>\r\n          <input type=\"text\" placeholder=\"工作内容\" class=\"inline-input form-control\" name=\"workContent\"\r\n                 [(ngModel)]=\"item.workContent\">\r\n          <input type=\"checkbox\" [(ngModel)]=\"item.isDission\" name=\"isDimission\"> <span>已离职</span>\r\n\r\n          <app-date-picker [date]=\"item.leaveDate\" [placeholder]=\"leaveTimePlaceHolder\" *ngIf=\"item.isDission\"\r\n                           (dateChange)=\"getLeaveDate($event)\"></app-date-picker>\r\n\r\n        </p>\r\n      </div>\r\n\r\n      <p class=\"add-employee-btn add-popup-btn\" (click)=\"addEmployee()\"><label class=\"line-name\"></label><i\r\n        class=\"iconfont icon-tianjiatupian m-ritght-5\"></i><span class=\"light-weight-grey\">添加员工</span></p>\r\n    </div>\r\n  </div>\r\n\r\n  <h3 class=\"title-line\">物业建筑信息</h3>\r\n  <div class=\"facility-content\">\r\n    <!--所在位置-->\r\n    <div class=\"block m-top-20\" style=\"position: relative;\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n        class=\"input-label-name\">所在位置:</span></label>\r\n      <select class=\"form-control select-style\" name=\"city\" id=\"city\" [(ngModel)]=\"city\"\r\n              (change)=\"loadDistrict(city)\">\r\n        <option value=\"item.code\" *ngFor=\"let item of cityList\">{{item.name}}</option>\r\n      </select>\r\n      <select class=\"form-control select-style\" name=\"district\" id=\"district\" [(ngModel)]=\"district\">\r\n        <option value=\"item.code\" *ngFor=\"let item of districtList\">{{item.name}}</option>\r\n      </select>\r\n      <input type=\"text\" name=\"detailAddress\" placeholder=\"详细地址\" name=\"addressDetail\" [(ngModel)]=\"addressDetail\"\r\n             class=\"form-control inline-input\">\r\n      <p><label for=\"\" class=\"line-name\"></label>深圳南山区\r\n        <span class=\"model-popup\" (click)=\"mapShow()\">地图定位</span>\r\n        <span class=\"longitude \">{{longitude}}</span>\r\n        <span class=\"latitude\">{{latitude}}</span></p>\r\n      <!--地图-->\r\n      <div [hidden]=\"mapBlock\" class=\"baidu-map\">\r\n        <app-baidu-map ></app-baidu-map>\r\n        <i class=\"iconfont icon-delete baidu-map-cancel\" (click)=\"closeMap()\"></i>\r\n        <p><button class=\"form-control btn btn-secondary map-btn-control\"  (click)=\"closeMap()\">取消</button><button class=\"form-control btn btn-primary map-btn-control\">确定</button></p>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!--位置描述-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n        class=\"input-label-name\">位置描述:</span></label>\r\n      <select class=\"form-control  select-style\" name=\"position\" id=\"position\" [(ngModel)]=\"positionDescription\">\r\n        <option value=\"item.code\" *ngFor=\"let item of positionDescriptionList\">{{item.name}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!--是否临街-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">是否临街:</span></label>\r\n      <select class=\"form-control  select-style\" name=\"nearStreet\" id=\"nearStreet\" [(ngModel)]=\"isNearStreet\">\r\n        <option value=\"item.code\" *ngFor=\"let item of positionList\">{{item.name}}</option>\r\n      </select>\r\n    </div>\r\n\r\n\r\n    <!--上级物业-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">上级物业:</span></label>\r\n      <select class=\"form-control  select-style\" name=\"facilities\" id=\"facilities\" [(ngModel)]=\"superFacility\">\r\n        <option value=\"item.code\" *ngFor=\"let item of superFacilityList\">{{item.name}}</option>\r\n      </select>\r\n      <p class=\"block m-top-20\"><label for=\"\" class=\"line-name\"></label> <input class=\"form-control select-style\"\r\n                                                                                type=\"text\"\r\n                                                                                placeholder=\"请填写商城名称\"\r\n                                                                                name=\"shopCityName\"\r\n                                                                                [(ngModel)]=\"shopCityName\"></p>\r\n    </div>\r\n\r\n\r\n    <div class=\"left-inline-block\">\r\n      <!--建筑面积-->\r\n      <div class=\"block m-top-20\">\r\n        <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n          class=\"input-label-name\">建筑面积:</span></label>\r\n        <input class=\"form-control inline-input  m-ritght-5\" name=\"buildingArea\" [(ngModel)]=\"buildingArea\" type=\"text\"\r\n               placeholder=\"请填写\">平米\r\n      </div>\r\n      <!--开间-->\r\n      <div class=\"block m-top-20\">\r\n        <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">开间:</span></label>\r\n        <input class=\"form-control inline-input  m-ritght-5\" name=\"roomArea\" [(ngModel)]=\"roomArea\" type=\"text\"\r\n               placeholder=\"请填写\">米\r\n      </div>\r\n      <!--门宽-->\r\n      <div class=\"block m-top-20\">\r\n        <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">门宽:</span></label>\r\n        <input class=\"form-control inline-input  m-ritght-5\" name=\"doorWidth\" [(ngModel)]=\"doorWidth\" type=\"text\"\r\n               placeholder=\"请填写\">米\r\n      </div>\r\n      <!--所处楼层-->\r\n      <div class=\"block m-top-20\">\r\n        <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">所处楼层:</span></label>\r\n        <input class=\"form-control inline-input  m-ritght-5\" name=\"floor\" [(ngModel)]=\"floor\" type=\"text\"\r\n               placeholder=\"请填写\">楼\r\n      </div>\r\n    </div>\r\n    <div class=\"right-inline-block\">\r\n      <!--使用面积-->\r\n      <div class=\"block m-top-20\">\r\n        <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">使用面积:</span></label>\r\n        <input class=\"form-control inline-input  m-ritght-5\" name=\"validArea\" [(ngModel)]=\"validArea\" type=\"text\"\r\n               placeholder=\"请填写\">平米\r\n      </div>\r\n      <!--进深-->\r\n      <div class=\"block m-top-20\">\r\n        <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">进深:</span></label>\r\n        <input class=\"form-control inline-input  m-ritght-5\" name=\"depth\" [(ngModel)]=\"depth\" type=\"text\"\r\n               placeholder=\"请填写\">米\r\n      </div>\r\n      <!--层高-->\r\n      <div class=\"block m-top-20\">\r\n        <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">层高:</span></label>\r\n        <input class=\"form-control inline-input  m-ritght-5\" name=\"floorHeight\" [(ngModel)]=\"floorHeight\" type=\"text\"\r\n               placeholder=\"请填写\">米\r\n      </div>\r\n      <!--总层数-->\r\n      <div class=\"block m-top-20\">\r\n        <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">总层数:</span></label>\r\n        <input class=\"form-control inline-input  m-ritght-5\" name=\"floorAmount\" [(ngModel)]=\"floorAmount\" type=\"text\"\r\n               placeholder=\"请填写\">层\r\n      </div>\r\n    </div>\r\n\r\n    <!--适合经营-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">适合经营:</span></label>\r\n      <span class=\"span-list-item\" *ngFor=\"let item of fitIndustry\"><span>{{item.name}}</span><i\r\n        class=\"iconfont icon-delete\" (click)=\"deleteSelectedIndustry(fitIndustry,item)\"></i></span>\r\n      <span class=\"add-item\" (click)=\"openIndustryModel(industryContent,fitIndustry)\">添加</span>\r\n    </div>\r\n\r\n    <!--推荐经营行业-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">推荐经营行业:</span></label>\r\n      <span class=\"span-list-item\" *ngFor=\"let item of recommendableIndustry\"><span>{{item.name}}</span><i\r\n        class=\"iconfont icon-delete\" (click)=\"deleteSelectedIndustry(recommendableIndustry,item)\"></i></span>\r\n      <span class=\"add-item\" (click)=\"openIndustryModel(industryContent,recommendableIndustry)\">添加</span>\r\n    </div>\r\n\r\n    <!--不宜经营行业-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">不宜经营行业:</span></label>\r\n      <span class=\"span-list-item\" *ngFor=\"let item of unRecommendableIndustry\"><span>{{item.name}}</span><i\r\n        class=\"iconfont icon-delete\" (click)=\"deleteSelectedIndustry(unRecommendableIndustry,item)\"></i></span>\r\n      <span class=\"add-item\" (click)=\"openIndustryModel(industryContent,unRecommendableIndustry)\">添加</span>\r\n    </div>\r\n\r\n\r\n    <!--物业配套-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">物业配套:</span></label>\r\n      <div class=\"facilities-list vertical-t\">\r\n        <span *ngFor=\"let item of facilitiesList\" class=\"facility-item\"><input [(ngModel)]=\"item.checked\"\r\n                                                                               name=\"facilityList\"\r\n                                                                               (click)=\"selectThisFacility(item)\"\r\n                                                                               class=\"week-checkbox\" type=\"checkbox\"\r\n                                                                               data-code=\"item.code\">{{item.name}}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!--费用成本-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">费用成本:</span></label>\r\n      <div class=\"fee-left-inline-block vertical-t\">\r\n        <!--水费-->\r\n        <div class=\"block m-bottom-20\">\r\n          <label for=\"\" class=\"line-name\"><span class=\"input-label-name light-weight-grey\">水费:</span></label>\r\n          <input class=\"form-control inline-input  m-ritght-5\" name=\"waterFee\" type=\"text\" [(ngModel)]=\"waterFee\"\r\n                 placeholder=\"请填写\">元/吨\r\n        </div>\r\n        <!--物业-->\r\n        <div class=\"block m-bottom-20\">\r\n          <label for=\"\" class=\"line-name\"><span class=\"input-label-name light-weight-grey\">物业:</span></label>\r\n          <input class=\"form-control inline-input  m-ritght-5\" name=\"facilityFee\" type=\"text\" [(ngModel)]=\"facilityFee\"\r\n                 placeholder=\"请填写\">元/平米/月\r\n        </div>\r\n        <!--燃气-->\r\n        <div class=\"block m-bottom-20\">\r\n          <label for=\"\" class=\"line-name\"><span class=\"input-label-name light-weight-grey\">燃气:</span></label>\r\n          <input class=\"form-control inline-input  m-ritght-5\" type=\"text\" name=\"gasFee\" [(ngModel)]=\"gasFee\"\r\n                 placeholder=\"请填写\">元/立方\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"fee-right-inline-block vertical-t\">\r\n        <!--电费-->\r\n        <div class=\"block m-bottom-20\">\r\n          <label for=\"\" class=\"line-name\"><span class=\"input-label-name light-weight-grey\">电费:</span></label>\r\n          <input class=\"form-control inline-input  m-ritght-5\" name=\"elecFee\" type=\"text\" [(ngModel)]=\"elecFee\"\r\n                 placeholder=\"请填写\">元/度\r\n        </div>\r\n        <!--租金-->\r\n        <div class=\"block m-bottom-20\">\r\n          <label for=\"\" class=\"line-name\"><span class=\"input-label-name light-weight-grey\">租金:</span></label>\r\n          <input class=\"form-control inline-input  m-ritght-5\" name=\"rent\" type=\"text\" placeholder=\"请填写\">\r\n          <select class=\"form-control select-style\" name=\"rentM\" id=\"rentM\" [(ngModel)]=\"rent\">\r\n            <option value=\"item.code\" *ngFor=\"let item of bigIndustryList\">{{item.name}}</option>\r\n          </select>\r\n        </div>\r\n        <!--暖气-->\r\n        <div class=\"block m-bottom-20\">\r\n          <label for=\"\" class=\"line-name\"><span class=\"input-label-name light-weight-grey\">暖气:</span></label>\r\n          <input class=\"form-control inline-input  m-ritght-5\" name=\"warmFee\" type=\"text\" [(ngModel)]=\"warmFee\"\r\n                 placeholder=\"请填写\">元/平米/月\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!--建筑形状-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">建筑形状:</span></label>\r\n      <select class=\"form-control  select-style\" name=\"buildingShape\" id=\"buildingShape\" [(ngModel)]=\"buildingShape\">\r\n        <option value=\"\">请选择</option>\r\n        <option value=\"item.value\" *ngFor=\"let item of buildingShapeList\">{{item.value_description}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!--产权类型-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">产权类型:</span></label>\r\n      <select class=\"form-control  select-style\" name=\"stateType\" id=\"stateType\" [(ngModel)]=\"propertyRightType\">\r\n        <option value=\"\">请选择</option>\r\n        <option value=\"item.code\" *ngFor=\"let item of propertyRightTypeList\">{{item.name}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!--拆迁风险-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">拆迁风险:</span></label>\r\n      <select class=\"form-control  select-style\" name=\"destroyRate\" id=\"destroyRate\" [(ngModel)]=\"destroyedRatio\">\r\n        <option value=\"\">请选择</option>\r\n        <option value=\"item.code\" *ngFor=\"let item of destroyedRatioList\">{{item.name}}</option>\r\n      </select>\r\n      <input type=\"text\" name=\"destroyRate\" [(ngModel)]=\"destroyedRatioDetail\" placeholder=\"请填写拆迁风险详情\"\r\n             class=\"form-control inline-input\">\r\n    </div>\r\n\r\n\r\n    <!--房东-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">房东:</span></label>\r\n      <span>王铁柱</span> <span class=\"edit-info\" (click)=\"openPersonalInfo(personInfo,houseOwner)\">编辑</span>\r\n    </div>\r\n  </div>\r\n  <button class=\"form-control inline-input btn-primary release-btn\" (click)=\"release()\">发布</button>\r\n</form>\r\n\r\n\r\n<!--店铺图片弹出框-->\r\n<ng-template #shopImageContent let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">店铺图片</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>\r\n      <label class=\"line-name\" for=\"\"><span class=\"input-label-name\">门面:</span></label>\r\n      <app-upload-files [images]=\"tempshopImages\" (addImages)=\"addImages(tempshopImages,$event)\"></app-upload-files>\r\n    </p>\r\n    <p>\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">环境:</span></label>\r\n      <app-upload-files [images]=\"tempenvironment\" (addImages)=\"addImages(tempenvironment,$event)\"></app-upload-files>\r\n    </p>\r\n    <p>\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">VR全景图:</span></label>\r\n      <span class=\"not-finished\">敬请期待</span>\r\n    </p>\r\n    <p>\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">视频:</span></label>\r\n      <span class=\"not-finished\">敬请期待</span>\r\n    </p>\r\n\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">确定</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!--店铺租金弹出框-->\r\n<ng-template #rentContent let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">店铺租金</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"block m-top-20\">\r\n      <label class=\"line-name\" for=\"\"><span class=\"input-label-name\">店铺租金:</span></label>\r\n      <input class=\"form-control rent-input\" type=\"text\" placeholder=\"6位整数+2位小数\" [(ngModel)]=\"tempshopRent\">\r\n      <select class=\"form-control  select-style\" name=\"\" [(ngModel)]=\"temprentMeasure\">\r\n        <option value=\"{{item.code}}\" *ngFor=\"let item of rentMeasureList\">{{item.name}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">支付方式:</span></label>\r\n      <div class=\"pay-way-list vertical-t\">\r\n        <span *ngFor=\"let item of payWayList\" class=\"select-span\"><input [(ngModel)]=\"item.name\" [value]=\"item.name\"\r\n                                                                         name=\"popUpPayWayChenk\"\r\n                                                                         (click)=\"selectThisPopUpPayWay(item)\"\r\n                                                                         class=\"week-checkbox\" type=\"radio\"\r\n                                                                         data-code=\"item.code\">{{item.name}}</span>\r\n        <input class=\"form-control time-imput inline-input\" type=\"text\" placeholder=\"请填写\"\r\n               [(ngModel)]=\"tempdefinedPayWay\" (ngModelChange)=\"definedPopUpPayChange()\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">是否递增:</span></label>\r\n      <span *ngFor=\"let item of rateChoice\" class=\"select-span\"><input [(ngModel)]=\"item.name\" [value]=\"item.name\"\r\n                                                                       name=\"isIncrease\" (click)=\"selectThisRate(item)\"\r\n                                                                       class=\"week-checkbox\" type=\"radio\"\r\n                                                                       data-code=\"item.code\">{{item.name}}</span>\r\n      <input type=\"text\" class=\"form-control inline-input\" placeholder=\"请填写递增幅度，如每年5%\" name=\"radioNumber\"\r\n             [(ngModel)]=\"tempdefinedRateWay\">\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">押金:</span></label>\r\n      <div class=\"pay-way-list vertical-t\">\r\n        <span *ngFor=\"let item of deposit\" class=\"select-span\"><input [(ngModel)]=\"item.name\" [value]=\"item.name\"\r\n                                                                      name=\"depositCheck\"\r\n                                                                      (click)=\"selectThisDepositWay(item)\"\r\n                                                                      class=\"week-checkbox\" type=\"radio\"\r\n                                                                      data-code=\"item.code\">{{item.name}}</span>\r\n\r\n        <input class=\"form-control time-imput inline-input\" type=\"text\" placeholder=\"请填写\" name=\"definedDeposit\"\r\n               [(ngModel)]=\"tempdefinedDepositWay\" (ngModelChange)=\"definedDepositChange()\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">租约:</span></label>\r\n      <app-date-picker [date]=\"temprentDate\" (dateChange)=\"getRentDate($event)\"></app-date-picker>\r\n      开始，租期 <input type=\"text\" name=\"rentTime\" class=\"form-control inline-input\" placeholder=\"请填写\"\r\n                   [(ngModel)]=\"temprentTime\"> 月\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">剩余合同期:</span></label>\r\n      <input type=\"text\" class=\"form-control inline-input\" placeholder=\"请填写\" name=\"leftContractTime\"\r\n             [(ngModel)]=\"templeftContractTime\"> 月\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">取消</button>\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">确定</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!--店铺营业状况弹出框-->\r\n<ng-template #profitContent let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">店铺营业状况</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">客单价:</span></label>\r\n      <input class=\"form-control profit inline-input\" type=\"text\" [(ngModel)]=\"temppersonProfit\" placeholder=\"请填写\">元\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">日均营业额:</span></label>\r\n      <input class=\"form-control profit inline-input\" type=\"text\" [(ngModel)]=\"tempdayProfit\" placeholder=\"请填写\">元\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">消费人群:</span></label>\r\n      <input class=\"form-control profit inline-input\" type=\"text\" [(ngModel)]=\"tempconsumePersonType\" placeholder=\"请填写\">如：居民，学生，游客，工薪，商务，公务，母婴人群，年轻人，中年人，老年人\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">最旺时段:</span></label>\r\n      <input class=\"form-control profit inline-input\" type=\"text\" [(ngModel)]=\"tempconsumeTime\" placeholder=\"请填写\">如：早上，上午，中午，下午，晚上，凌晨\r\n    </div>\r\n\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">堂食量:</span></label>\r\n      <input class=\"form-control profit inline-input\" type=\"text\" [(ngModel)]=\"tempfoodAmount\" placeholder=\"请填写\">元\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">外卖量:</span></label>\r\n      <input class=\"form-control profit inline-input\" type=\"text\" [(ngModel)]=\"temptakeOutAmount\" placeholder=\"请填写\">元\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">会员数:</span></label>\r\n      <input class=\"form-control profit inline-input\" type=\"text\" [(ngModel)]=\"tempmemberAmount\" placeholder=\"请填写\">元\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">会员类型:</span></label>\r\n      <select class=\"form-control  select-style\" name=\"\" [(ngModel)]=\"tempmemberType\">\r\n        <option>1</option>\r\n        <option>2</option>\r\n        <option>3</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">取消</button>\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">确定</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!--转让信息弹出框-->\r\n<ng-template #transferContent let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">店铺转让内容</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">转让状态:</span></label>\r\n      <div class=\"pay-way-list\">\r\n        <span *ngFor=\"let item of transferStatusList\" class=\"select-span\"><input [(ngModel)]=\"item.name\"\r\n                                                                                 [value]=\"item.name\"\r\n                                                                                 name=\"transferStatus\"\r\n                                                                                 (click)=\"selectTransferStatus(item)\"\r\n                                                                                 class=\"week-checkbox\" type=\"radio\"\r\n                                                                                 data-code=\"item.value\">{{item.value_description}}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">转让费:</span></label>\r\n      <input class=\"form-control profit inline-input\" name=\"transferFee\" type=\"text\" [(ngModel)]=\"temptransferFee\"\r\n             placeholder=\"请填写\">万元 <input type=\"checkbox\" name=\"isNegotiable\" [(ngModel)]=\"tempisNegotiable\"> 可面议\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">可否空转:</span></label>\r\n      <div class=\"pay-way-list\">\r\n        <span *ngFor=\"let item of emptyTransferList\" class=\"select-span\"><input [(ngModel)]=\"item.name\"\r\n                                                                                name=\"isEmptyTransfer\"\r\n                                                                                [value]=\"item.name\"\r\n                                                                                (click)=\"selectEmptyTransfer(item)\"\r\n                                                                                class=\"week-checkbox\" type=\"radio\"\r\n                                                                                data-code=\"item.code\">{{item.name}}</span>\r\n        <input type=\"text\" class=\"form-control inline-input\" placeholder=\"空转转让费\" name=\"transferFee\"\r\n               [(ngModel)]=\"tempemptyTransferFee\"> 万元\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">转让内容:</span></label>\r\n      <input class=\"form-control profit inline-input\" name=\"transferContent\" [(ngModel)]=\"temptransferStaff\" type=\"text\"\r\n             placeholder=\"请填写\">如：设备，家具，品牌，技术，会员\r\n    </div>\r\n\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">转让原因:</span></label>\r\n      <textarea name=\"transferReason\" id=\"transferReason\" [(ngModel)]=\"temptransferReason\" cols=\"60\"\r\n                rows=\"5\"></textarea>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">取消</button>\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c(tempTransferContent)\">确定</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!--行业列表弹出框-->\r\n<ng-template #industryContent let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">行业列表</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <div>\r\n      <span>您已选择：</span>\r\n      <div class=\"inline-block vertical-t\" style=\"width: 85%;\">\r\n        <span *ngFor=\"let item of tempdefaultIndustryList\" class=\"industry-selected-span\">{{item.name}}\r\n          <i (click)=\"deleteSelectedIndustry(tempdefaultIndustryList,item)\" class=\"iconfont icon-delete\"></i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <ul class=\"popup-industry-list\">\r\n      <li *ngFor=\"let list of industries\">\r\n        <span (click)=\"selectThisIndustry(item)\" *ngFor=\"let item of list\"\r\n              [ngClass]=\"{'big-industry-style':item.code.toString().length < 4,'small-industry-style':item.code.toString().length > 3,'selected-span':item.selected}\">{{item.name}}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">取消</button>\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">确定</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!--店铺证件-->\r\n<ng-template #certificationEdit let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">店铺证件</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <!--证件类型-->\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">证件类型:</span></label>\r\n      <select class=\"form-control  select-style\" name=\"certifications\" [(ngModel)]=\"selectedCertificationType\">\r\n        <option value=\"{{item.id}}\" *ngFor=\"let item of certificationsTypeList\">{{item.name}}</option>\r\n      </select>\r\n      <input class=\"form-control rent-input\" type=\"text\" name=\"writeCertificationType\"\r\n             [(ngModel)]=\"writeCertificationType\"\r\n             placeholder=\"请填写证件类型\">\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n        class=\"input-label-name\">图片:</span></label>\r\n      <div class=\"certification-list\">\r\n        <div class=\"upload-block-inline\">\r\n          <app-upload-files [multiImages]=\"headIsMulti\" [images]=\"headImageA\"\r\n                            (addImages)=\"addCertificationImages(headImage,$event)\"></app-upload-files>\r\n          <p class=\"light-weight-grey\">正面</p>\r\n        </div>\r\n        <div class=\"upload-block-inline\">\r\n          <app-upload-files [multiImages]=\"backIsMulti\" [images]=\"backImageA\"\r\n                            (addImages)=\"addCertificationImages(backImage,$event)\"></app-upload-files>\r\n          <p class=\"light-weight-grey\">反面</p>\r\n        </div>\r\n        <div class=\"upload-block-inline\">\r\n          <app-upload-files [multiImages]=\"otherIsMulti\" [images]=\"otherImages\"\r\n                            (addImages)=\"addCertificationImages(otherImages,$event)\"></app-upload-files>\r\n          <p class=\"light-weight-grey\">添加</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">证件编号:</span></label>\r\n      <input class=\"form-control profit inline-input\" name=\"certificationNumber\" [(ngModel)]=\"certificationNumber\"\r\n             type=\"text\" placeholder=\"请填写\">\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">主题名称:</span></label>\r\n      <input class=\"form-control profit inline-input\" name=\"themeName\" [(ngModel)]=\"themeName\" type=\"text\"\r\n             placeholder=\"请填写\">\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">地址:</span></label>\r\n      <input class=\"form-control profit inline-input\" name=\"address\" [(ngModel)]=\"address\" type=\"text\"\r\n             placeholder=\"请填写\">\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">许可范围:</span></label>\r\n      <input class=\"form-control profit inline-input\" name=\"accessLine\" [(ngModel)]=\"permissionScope\" type=\"text\"\r\n             placeholder=\"请填写\">\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">其他内容:</span></label>\r\n      <input class=\"form-control profit inline-input\" name=\"otherContent\" [(ngModel)]=\"otherContent\" type=\"text\"\r\n             placeholder=\"请填写\">\r\n    </div>\r\n\r\n\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">取消</button>\r\n\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">确定</button>\r\n\r\n  </div>\r\n</ng-template>\r\n\r\n<!--个人信息弹出框-->\r\n<ng-template #personInfo let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">个人信息</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n        class=\"input-label-name\">手机号码:</span></label>\r\n      <div class=\"inline-block vertical-t\">\r\n        <input *ngFor=\"let item of phoneList;let i = index ;\" name=\"phoneNumber\" [(ngModel)]=\"phoneList[i]\"\r\n               class=\"form-control  p-block\"\r\n               type=\"text\" placeholder=\"请填写\">\r\n      </div>\r\n      <p class=\"add-employee-btn add-popup-btn m-top-10\" (click)=\"addPhoneNumbers()\"><label class=\"line-name\"></label><i\r\n        class=\"iconfont icon-tianjiatupian m-ritght-5\"></i><span class=\"light-weight-grey\">添加号码</span></p>\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">称呼:</span></label>\r\n      <input class=\"form-control  inline-input\" type=\"text\" name=\"name\" [(ngModel)]=\"name\" placeholder=\"如王先生\">\r\n      <input class=\"form-control  inline-input\" type=\"text\" name=\"realName\" [(ngModel)]=\"realName\" placeholder=\"真实姓名\">\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">性别:</span></label>\r\n      <div class=\"pay-way-list\">\r\n        <span *ngFor=\"let item of sexType\" class=\"select-span\"><input [(ngModel)]=\"item.name\" name=\"sexType\"\r\n                                                                      [value]=\"item.name\"\r\n                                                                      (click)=\"selectSexStatus(item)\"\r\n                                                                      class=\"week-checkbox\" type=\"radio\"\r\n                                                                      data-code=\"item.code\">{{item.name}}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">出生年月日:</span></label>\r\n      <app-date-picker [date]=\"birthdayDate\" (dateChange)=\"getbirthTime($event)\"></app-date-picker>\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n        class=\"input-label-name\">联系地址:</span></label>\r\n      <input class=\"form-control  inline-input\" type=\"text\" name=\"contactAddress\" [(ngModel)]=\"contactAddress\"\r\n             placeholder=\"请填写\">\r\n    </div>\r\n\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n        class=\"input-label-name\">电子邮件:</span></label>\r\n      <input class=\"form-control  inline-input\" type=\"text\" name=\"email\" [(ngModel)]=\"email\" placeholder=\"请填写\">\r\n    </div>\r\n\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n        class=\"input-label-name\">qq:</span></label>\r\n      <input class=\"form-control  inline-input\" type=\"text\" name=\"qq\" [(ngModel)]=\"qq\" placeholder=\"请填写\">\r\n    </div>\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"required-tag\">*</span><span\r\n        class=\"input-label-name\">微信</span></label>\r\n      <input class=\"form-control  inline-input\" type=\"text\" name=\"wx\" [(ngModel)]=\"wx\" placeholder=\"请填写\">\r\n    </div>\r\n\r\n\r\n    <div class=\"block m-top-20\">\r\n      <label for=\"\" class=\"line-name\"><span class=\"input-label-name\">详细描述:</span></label>\r\n      <textarea name=\"\" id=\"personInfoDetail\" cols=\"60\" rows=\"5\" name=\"personInfoDetail\"\r\n                [(ngModel)]=\"personInfoDetail\"></textarea>\r\n    </div>\r\n\r\n\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">取消</button>\r\n\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">确定</button>\r\n\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n\r\n\r\n"

/***/ }),

/***/ "../../../../../src/app/app.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ng_bootstrap_ng_bootstrap__ = __webpack_require__("../../../../@ng-bootstrap/ng-bootstrap/index.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};


var AppComponent = (function () {
    function AppComponent(modalService, data) {
        var _this = this;
        this.modalService = modalService;
        this.data = data;
        this.allIndustry = [];
        this.allDistricts = [];
        /*品牌名称*/
        this.shopName = '';
        this.isBrandName = false;
        this.brandName = '';
        this.subShopName = '';
        this.operateType = '';
        this.operateMode = [{
                code: 1,
                name: "银行"
            },
            {
                code: 2,
                name: "啥地方是否"
            }, {
                code: 3,
                name: "123"
            }];
        // 经营行业
        this.bigIndustry = '';
        this.smallIndustry = '';
        this.bigIndustryList = [];
        this.smallIndustryList = [];
        this.startOpenDate = ''; // 开业日期
        this.operateStatusList = [
            { code: 1, name: "经营中" }, { code: 2, name: "停业" }, { code: 3, name: "装修" }
        ]; // 经营状态
        this.operateStatus = 1;
        this.endOpenDate = ''; // 停业日期
        this.shopImages = []; // 门面
        this.multiShops = true;
        this.environment = [
            { id: 123, url: "./app/public/images/1.png" },
            { id: 123, url: "./app/public/images/2.jpg" }
        ]; // 环境
        this.multiEnvironment = true;
        this.shopPhoneNumber = ''; // 前台电话
        this.takeOutPhone = ''; // 外卖电话
        this.wholeWeek = false; // 营业时间
        this.vaildTime = this.data.getWeekData(); //星期列表
        this.operateDate = [];
        this.allDay = false;
        this.operateStartTime = '';
        this.operateEndTime = '';
        this.fitmentLevelStatus = ''; // 装修档次
        this.fitmentLevelList = [
            { code: 1, name: "精装修" },
            { code: 2, name: "普通装修" },
            { code: 3, name: "简单装修" },
            { code: 4, name: "支付宝" },
            { code: 5, name: "wifi" },
            { code: 6, name: "微信" },
            { code: 7, name: "停车位" },
            { code: 8, name: "可刷卡" },
        ];
        this.serviceProvided = []; // 提供服务
        this.serviceList = this.data.getServiceList();
        this.shopRent = ''; // 店铺租金
        this.rentMeasure = 1;
        this.rentMeasureList = [{ code: 1, name: "元/月" }, { code: 2, name: "万元/月" }, { code: 3, name: "千元/月" }];
        this.payWayList = this.data.getPayWayList(); // 支付方式&&编辑更多支付方式
        this.payWay = '';
        this.definedPayWay = '';
        this.rateWay = ''; // 递增或递减
        this.definedRateWay = '';
        this.rateChoice = [
            { code: 1, name: "递增" },
            { code: 2, name: "递减" }
        ];
        this.depositWay = ''; // 押金
        this.definedDepositWay = '';
        this.deposit = this.data.getDepositList();
        this.rentDate = ''; //租期
        this.rentTime = ''; //租约
        this.leftContractTime = ''; //剩余合同期
        this.personProfit = ''; //客单价
        this.dayProfit = ''; //日均营业额
        this.consumePersonType = ''; //消费人群
        this.consumeTime = ''; //消费时间
        this.foodAmount = ''; //堂食量
        this.takeOutAmount = ''; //外卖量
        this.memberAmount = ''; //会员数
        this.memberType = ''; //会员类型
        this.transferStatus = ''; //转让状态
        this.transferStatusList = [
            { code: 1, name: "不转让" },
            { code: 2, name: "转让中" },
            { code: 3, name: "转让成功" },
            { code: 4, name: "租约到期" }
        ];
        this.transferFee = ''; //转让费
        this.isNegotiable = false;
        this.emptyTransfer = ''; //可否空转
        this.emptyTransferList = [
            { code: 1, name: "可空转" },
            { code: 2, name: "不可空转" }
        ];
        this.emptyTransferFee = ''; //空转转让费
        this.transferStaff = ''; //转让内容
        this.transferReason = ''; //转让原因
        /*店铺证件*/
        this.certifications = [
            {
                certificationType: 1,
                name: "营业执照",
                headImage: '',
                backImage: '',
                otherImages: [],
                certificationNumber: '',
                themeName: '',
                address: '',
                permissionScope: '',
                otherContent: ''
            },
            {
                certificationType: 2,
                name: "店铺图片",
                headImage: '',
                backImage: '',
                otherImages: [],
                certificationNumber: '',
                themeName: '',
                address: '',
                permissionScope: '',
                otherContent: ''
            },
            {
                certificationType: 3,
                name: "身份证件",
                headImage: '',
                backImage: '',
                otherImages: [],
                certificationNumber: '',
                themeName: '',
                address: '',
                permissionScope: '',
                otherContent: ''
            }
        ];
        /*店铺证件弹出框*/
        this.selectedCertificationType = 4;
        this.writeCertificationType = ''; //证件类型
        this.certificationsTypeList = [
            { id: 1, name: "营业执照" },
            { id: 2, name: "店铺图片" },
            { id: 3, name: "身份证件" },
            { id: 4, name: "其他" }
        ];
        this.headIsMulti = false; //是否多张
        this.backIsMulti = false;
        this.otherIsMulti = true;
        this.headImage = '';
        this.backImage = '';
        this.headImageA = []; //正面图片
        this.backImageA = []; //反面图片
        this.otherImages = []; //其他图片
        this.certificationNumber = ''; //证件名称
        this.themeName = ''; //主题名称
        this.address = ''; //地址
        this.permissionScope = ''; //许可范围
        this.otherContent = ''; //其他内容
        /*店铺老板 && 个人信息弹出框*/
        this.shopBoss = {
            name: '',
            phoneList: [""],
            realName: '',
            sex: '',
            birthdayDate: '',
            contactAddress: '',
            email: '',
            qq: '',
            wx: '',
            personInfoDetail: ''
        };
        this.phoneList = [""];
        this.name = ''; //名称
        this.realName = ''; //真实名字
        /*性别*/
        this.sexType = [
            { code: 1, name: "男" },
            { code: 2, name: "女" },
            { code: 3, name: "其他" }
        ];
        this.sex = ''; //性别
        /*出生日期*/
        this.birthdayDate = '';
        this.contactAddress = ''; //联系地址
        this.email = ''; //电子邮件
        this.qq = ''; //qq
        this.wx = ''; //微信
        this.personInfoDetail = ''; //详细描述
        /*合伙人*/
        this.partner = [
            {
                name: "里欧1",
                phoneList: ['18971154515'],
                realName: '',
                sex: '',
                birthdayDate: '',
                contactAddress: '',
                email: '',
                qq: '',
                wx: '',
                personInfoDetail: ''
            },
            {
                name: "里欧2",
                phoneList: [''],
                realName: '',
                sex: '',
                birthdayDate: '',
                contactAddress: '',
                email: '',
                qq: '',
                wx: '',
                personInfoDetail: ''
            },
        ];
        /*店铺员工*/
        this.entryTimePlaceHolder = '入职时间';
        this.leaveTimePlaceHolder = '离职时间';
        this.isDission = false;
        this.employee = [{
                position: '', entryDate: '', workContent: '', leaveDate: '', isDission: false,
                name: "里欧1",
                phoneList: [''],
                realName: '',
                sex: '',
                birthdayDate: '',
                contactAddress: '',
                email: '',
                qq: '',
                wx: '',
                personInfoDetail: ''
            }];
        /*所在位置*/
        this.city = ''; //城市
        this.district = ''; //区域
        this.cityList = [];
        this.districtList = [];
        this.addressDetail = '';
        this.longitude = ''; //经度
        this.latitude = ''; //纬度
        /*位置描述*/
        this.positionDescription = ''; //位置描述
        this.positionDescriptionList = [];
        /*是否临街*/
        this.isNearStreet = ''; //是否临街
        this.positionList = [];
        /*上级物业*/
        this.superFacility = ''; //上级物业
        this.superFacilityList = [];
        this.shopCityName = ''; //商城名称
        this.buildingArea = ''; //建筑面积
        this.roomArea = ''; //开间
        this.doorWidth = ''; //门宽
        this.floor = ''; //所处楼层
        this.validArea = ''; //使用面积
        this.depth = ''; //进深
        this.floorHeight = ''; //层高
        this.floorAmount = ''; //总层数
        /*适合经营*/
        this.fitIndustry = []; //适合经营
        /*推荐经营的行业*/
        this.recommendableIndustry = []; //推荐经营
        /*不推荐经营的行业*/
        this.unRecommendableIndustry = []; //不推荐经营
        /*物业配套*/
        this.facilities = []; //物业配套
        this.facilitiesList = [
            { code: 1, name: "可明火", checked: false },
            { code: 2, name: "380V电压", checked: false },
            { code: 3, name: "电梯", checked: false },
            { code: 4, name: "暖气", checked: false },
            { code: 5, name: "上水", checked: false },
            { code: 6, name: "排烟", checked: false },
            { code: 7, name: "中央空调", checked: false },
            { code: 8, name: "天然气", checked: false },
            { code: 9, name: "外边去", checked: false }
        ];
        /*费用*/
        this.waterFee = ''; //水费
        this.facilityFee = ''; ////物业
        this.gasFee = ''; //燃气
        this.elecFee = ''; //电费
        this.rent = ''; //租金
        this.warmFee = ''; //暖气
        /*建筑形状*/
        this.buildingShape = '';
        this.buildingShapeList = [];
        /*产权类型*/
        this.propertyRightType = '';
        this.propertyRightTypeList = [];
        /*拆迁风险*/
        this.destroyedRatio = '';
        this.destroyedRatioList = [];
        this.destroyedRatioDetail = '';
        /*房东*/
        this.houseOwner = {
            name: "里欧1",
            phoneList: [''],
            realName: '',
            sex: '',
            birthdayDate: '',
            contactAddress: '',
            email: '',
            qq: '',
            wx: '',
            personInfoDetail: ''
        };
        this.mapInfo = { 'city': this.city, 'district': '', 'address': '', 'lng': '', 'lat': '' };
        this.payWayCode = '';
        this.tempPayWayCode = '';
        this.defaultIndustryList = [];
        this.mapBlock = true;
        ///////////////////////////////////////////////////////////////////////////////////////////////
        //开始处理弹出框的值
        ////////////////////////////////////////////////////////////////////////////////////////////////
        /*图片弹出框*/
        this.tempshopImages = [{ id: 1, url: "http://www.baidu.com" }, { id: 2, url: "http://www.baidu.com" }]; //此处复制方式和shopImages一样；
        this.tempenvironment = [{ id: 3, url: "http://www.baidu.com" }];
        this.jsonShopImages = { tempshopImages: this.tempshopImages, tempenvironment: this.tempenvironment };
        /*店铺租金弹出框*/
        this.tempshopRent = '';
        this.temprentMeasure = 1;
        this.temppayWay = '';
        this.tempdefinedPayWay = '';
        this.temprateWay = '';
        this.tempdefinedRateWay = '';
        this.tempdepositWay = '';
        this.tempdefinedDepositWay = '';
        this.temprentDate = '';
        this.temprentTime = '';
        this.templeftContractTime = '';
        this.tempRentContent = {
            tempshopRent: this.tempshopRent,
            temprentMeasure: this.temprentMeasure,
            temprateWay: this.temprateWay,
            tempdefinedRateWay: this.tempdefinedRateWay,
            tempdepositWay: this.tempdepositWay,
            tempdefinedDepositWay: this.tempdefinedDepositWay,
            temprentDate: this.temprentDate,
            temprentTime: this.temprentTime,
            templeftContractTime: this.templeftContractTime
        };
        /*店铺营业状况弹出框*/
        this.temppersonProfit = '';
        this.tempdayProfit = '';
        this.tempconsumePersonType = '';
        this.tempconsumeTime = '';
        this.tempfoodAmount = '';
        this.temptakeOutAmount = '';
        this.tempmemberAmount = '';
        this.tempmemberType = '';
        this.tempOperateStatus = {
            temppersonProfit: this.temppersonProfit,
            tempdayProfit: this.tempdayProfit,
            tempconsumePersonType: this.tempconsumePersonType,
            tempconsumeTime: this.tempconsumeTime,
            tempfoodAmount: this.tempfoodAmount,
            temptakeOutAmount: this.temptakeOutAmount,
            tempmemberAmount: this.tempmemberAmount,
            tempmemberType: this.tempmemberType
        };
        /*转让信息弹出框*/
        this.temptransferStatus = '';
        this.temptransferFee = '';
        this.tempisNegotiable = false;
        this.tempemptyTransfer = '';
        this.tempemptyTransferFee = '';
        this.temptransferStaff = '';
        this.temptransferReason = '';
        this.tempTransferContent = {
            temptransferStatus: this.temptransferStatus,
            temptransferFee: this.temptransferFee,
            tempemptyTransfer: this.tempemptyTransfer,
            tempemptyTransferFee: this.tempemptyTransferFee,
            temptransferStaff: this.temptransferStaff,
            temptransferReason: this.temptransferReason
        };
        /*行业列表弹出框*/
        this.tempfitIndustry = [];
        this.temprecommendableIndustry = [];
        this.tempunRecommendableIndustry = [];
        //获取行业列表
        this.data.getIndustryData().then(function (res) {
            _this.industries = res; //所有数据[[],[]],用于推荐经营，不宜经营。。。
            res.forEach(function (value, i) {
                value.forEach(function (v, j) {
                    j == 0 ? _this.bigIndustryList.push(v) : '';
                    _this.allIndustry.push(v);
                });
            });
        });
        //获取城市列表
        this.data.getDistrictData().then(function (res) {
            res.forEach(function (v, i) {
                _this.allDistricts.push(v);
                v.id.substr(-6) == '000000' ? _this.cityList.push(v) : '';
            });
        });
        //获取建筑形状
        this.data.getBuildingShapeData().then(function (res) {
            _this.buildingShapeList = res;
        });
        //获取转让状态列表
        this.data.getTransferStatusData().then(function (res) {
            _this.transferStatusList = res;
        });
        //获取位置描述列表
        this.data.getPositionDesData().then(function (res) {
            console.log("res:", res);
            _this.positionDescriptionList = res;
        });
    }
    AppComponent.prototype.updateShopName = function () {
        console.log("ooo", this.subShopName);
        this.shopName = this.subShopName == '' ? this.brandName : this.brandName + "(" + this.subShopName + ")";
        console.log("shopName:", this.shopName);
    };
    AppComponent.prototype.loadSmallIndustry = function (code) {
        var _this = this;
        this.allIndustry.forEach(function (v, i) {
            code.toString().trim() === v.code.toString().substr(0, 2).trim() ? _this.smallIndustryList.push(v) : '';
        });
    };
    AppComponent.prototype.loadDistrict = function (code) {
        var _this = this;
        this.allDistricts.forEach(function (v, i) {
            code.toString().substr(0, 4) == v.id.toString().substr(0, 4) ? _this.districtList.push(v) : '';
        });
    };
    AppComponent.prototype.getStartTime = function (date) {
        this.startOpenDate = date;
        console.log("startOpenDate:", this.startOpenDate);
    };
    AppComponent.prototype.getEndTime = function (date) {
        this.endOpenDate = date;
    };
    AppComponent.prototype.addImages = function (oldImages, newInamges) {
        oldImages = newInamges;
    };
    AppComponent.prototype.addPartner = function () {
        var obj = {
            name: "",
            phoneList: [''],
            realName: '',
            sex: '',
            birthdayDate: '',
            contactAddress: '',
            email: '',
            qq: '',
            wx: '',
            personInfoDetail: ''
        };
        this.partner.push(obj);
    };
    AppComponent.prototype.addCertificationImages = function (imageUrl, newInamges) {
        imageUrl = newInamges[0].url;
    };
    AppComponent.prototype.selectAllWeek = function () {
        var _this = this;
        if (this.wholeWeek === false) {
            this.vaildTime.map(function (item, index) {
                item.checked = true;
            });
            this.vaildTime.forEach(function (v, i) {
                _this.operateDate.push(v);
            });
        }
        else {
            this.vaildTime.map(function (item, index) {
                item.checked = false;
            });
            this.operateDate = [];
        }
    };
    AppComponent.prototype.selectThisDay = function (item) {
        var _this = this;
        if (item.checked === true) {
            this.operateDate.push(item);
        }
        else {
            this.operateDate.forEach(function (value, index) {
                value.code = item.code ? _this.operateDate.splice(index, 1) : "";
            });
        }
    };
    AppComponent.prototype.selectAllDay = function () {
        if (this.allDay === false) {
            this.operateStartTime = "00:00";
            this.operateEndTime = "24:00";
        }
        else {
            this.operateStartTime = "";
            this.operateEndTime = "";
        }
    };
    AppComponent.prototype.selectThisService = function (item) {
        var _this = this;
        if (item.checked === false) {
            this.serviceProvided.push(item);
        }
        else {
            this.serviceProvided.forEach(function (value, index) {
                value.code.toString() === item.code.toString() ? _this.serviceProvided.splice(index, 1) : '';
            });
        }
    };
    AppComponent.prototype.selectThisPayWay = function (item) {
        this.payWayCode = item.code;
        this.payWay = item.code == 0 ? this.definedPayWay : item.name;
    };
    AppComponent.prototype.selectThisPopUpPayWay = function (item) {
        this.tempPayWayCode = item.code;
        this.temppayWay = item.code == 0 ? this.tempdefinedPayWay : item.name;
    };
    AppComponent.prototype.definedPayChange = function () {
        if (this.payWayCode.toString() == '0') {
            this.payWay = this.definedPayWay;
        }
    };
    AppComponent.prototype.definedPopUpPayChange = function () {
        if (this.tempPayWayCode.toString() == '0') {
            this.temppayWay = this.tempdefinedPayWay;
        }
    };
    AppComponent.prototype.selectThisRate = function (item) {
        this.rateWay = item.name;
    };
    AppComponent.prototype.selectThisDepositWay = function (item) {
        this.depositWayCode = item.code;
        this.tempdepositWay = item.code == 0 ? this.tempdefinedDepositWay : item.name;
    };
    AppComponent.prototype.definedDepositChange = function () {
        this.tempdepositWay = this.depositWayCode.toString() == '0' ? this.tempdefinedDepositWay : this.tempdepositWay;
    };
    AppComponent.prototype.getRentDate = function (date) {
        this.rentDate = date;
    };
    AppComponent.prototype.selectTransferStatus = function (item) {
        this.transferStatus = item;
    };
    AppComponent.prototype.selectEmptyTransfer = function (item) {
        this.emptyTransfer = item;
    };
    AppComponent.prototype.deleteCertification = function (item) {
        var _this = this;
        this.certifications.forEach(function (value, index) {
            value.certificationType == item.id ? _this.certifications.splice(index, 1) : '';
        });
    };
    AppComponent.prototype.addPhoneNumbers = function () {
        this.phoneList.push(" "); //增加输入框个数
    };
    AppComponent.prototype.selectSexStatus = function (item) {
        this.sex = item;
    };
    AppComponent.prototype.getbirthTime = function (date) {
        this.birthdayDate = date;
    };
    AppComponent.prototype.addEmployee = function () {
        var obj = {
            position: '', entryDate: '', workContent: '', leaveDate: '', isDission: false,
            name: "里欧1",
            phoneList: [''],
            realName: '',
            sex: '',
            birthdayDate: '',
            contactAddress: '',
            email: '',
            qq: '',
            wx: '',
            personInfoDetail: ''
        };
        this.employee.push(obj);
    };
    AppComponent.prototype.getEntryDate = function (date) {
    };
    AppComponent.prototype.getLeaveDate = function (date) {
    };
    AppComponent.prototype.open = function (content) {
        var _this = this;
        this.modalService.open(content, { size: 'lg' }).result.then(function (result) {
            _this.sureBtnFunction(content, result);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
        });
    };
    AppComponent.prototype.openRentModal = function (content) {
        var _this = this;
        this.tempshopRent = this.shopRent;
        this.temprentMeasure = this.rentMeasure;
        this.temppayWay = this.payWay;
        this.tempPayWayCode = this.payWayCode;
        this.tempdefinedPayWay = this.definedPayWay;
        this.modalService.open(content, { size: 'lg' }).result.then(function (result) {
            _this.sureBtnFunction(content, result);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
        });
    };
    AppComponent.prototype.openShopCertificationModal = function (content, item) {
        var _this = this;
        this.defaultCertification = item;
        this.selectedCertificationType = item.certificationType;
        this.writeCertificationType = ''; //证件类型
        this.headImageA.push(item.headImage); //正面图片
        this.backImageA.push(item.backImage); //反面图片
        this.otherImages = item.otherImages; //其他图片
        this.certificationNumber = item.certificationNumber; //证件名称
        this.themeName = item.themeName; //主题名称
        this.address = item.address; //地址
        this.permissionScope = item.permissionScope; //许可范围
        this.otherContent = item.otherContent; //其他内容
        this.modalService.open(content, { size: 'lg' }).result.then(function (result) {
            _this.sureBtnFunction(content, result);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
        });
    };
    AppComponent.prototype.openPersonalInfo = function (content, item) {
        var _this = this;
        this.defaultPerson = item;
        this.phoneList = [];
        item.phoneList.forEach(function (v, i) {
            _this.phoneList.push(v);
        });
        this.name = item.name; //证件类型
        this.realName = item.realName;
        this.sex = item.sex;
        this.birthdayDate = item.birthdayDate;
        this.contactAddress = item.contactAddress;
        this.email = item.email;
        this.qq = item.qq;
        this.wx = item.wx;
        this.personInfoDetail = item.personInfoDetail;
        this.modalService.open(content, { size: 'lg' }).result.then(function (result) {
            _this.sureBtnFunction(content, result);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
        });
    };
    AppComponent.prototype.openIndustryModel = function (content, selectedList) {
        var _this = this;
        this.defaultIndustryList = selectedList;
        this.tempdefaultIndustryList = [];
        selectedList.forEach(function (v, i) {
            _this.tempdefaultIndustryList.push(v);
        });
        this.industrySelectedChange(this.industries, this.tempdefaultIndustryList);
        this.modalService.open(content, { size: 'lg' }).result.then(function (result) {
            _this.sureBtnFunction(content, result);
        }, function (reason) {
            _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
        });
    };
    //行业弹出框选择行业
    AppComponent.prototype.selectThisIndustry = function (item) {
        var tempIndexArr = []; //记录要删除的项的index
        var isConnected = false; //标记是否是大小行业的关系是则删除对应的选项之外还要添加当前选择的项
        item.selected = true;
        for (var i = 0; i < this.tempdefaultIndustryList.length; i++) {
            var v = this.tempdefaultIndustryList[i];
            if (v.code.toString() != item.code.toString()) {
                //不同的情况分为两种，1,完全不同和部分不同
                if (v.code.toString().length != item.code.toString().length && v.code.toString().substr(0, 2) == item.code.toString().substr(0, 2)) {
                    tempIndexArr.push(i);
                    isConnected = true;
                }
                else if (i == (this.tempdefaultIndustryList.length - 1)) {
                    this.tempdefaultIndustryList.push(item);
                    this.industrySelectedChange(this.industries, this.tempdefaultIndustryList);
                    isConnected = false;
                }
            }
            else {
                return;
            }
        }
        isConnected == true ? this.tempdefaultIndustryList.push(item) : '';
        for (var i = 0; i < tempIndexArr.length; i++) {
            var v = tempIndexArr[i];
            this.tempdefaultIndustryList.splice(v, 1);
            this.industrySelectedChange(this.industries, this.tempdefaultIndustryList);
            for (var j = 0; j < tempIndexArr.length; j++) {
                tempIndexArr[j] = tempIndexArr[j] - 1;
            }
        }
    };
    AppComponent.prototype.deleteSelectedIndustry = function (dataList, item) {
        var _this = this;
        dataList.forEach(function (value, index) {
            value.code == item.code ? dataList.splice(index, 1) : '';
            _this.industrySelectedChange(_this.industries, _this.tempdefaultIndustryList);
        });
    };
    AppComponent.prototype.selectThisFacility = function (item) {
        var _this = this;
        this.facilities.forEach(function (v, i) {
            console.log("123", item.code, v.code, v.code.toString() === item.code.toString());
            v.code.toString() === item.code.toString() ? _this.facilities.splice(i, 1) : i == _this.facilities.length ? _this.facilities.push(item) : '';
        });
    };
    //行业弹出框选择行业，当选择的行业发生变化是行业列表标红的选项也要改变
    AppComponent.prototype.industrySelectedChange = function (industries, selectedL) {
        this.industries.forEach(function (v, i) {
            v.map(function (item) { return item.selected = false; });
        });
        for (var i = 0; i < selectedL.length; i++) {
            for (var j = 0; j < this.industries.length; j++) {
                for (var k = 0; k < this.industries[j].length; k++) {
                    this.industries[j][k].code == selectedL[i].code ? this.industries[j][k].selected = true : '';
                }
            }
        }
    };
    AppComponent.prototype.mapShow = function () {
        this.mapBlock = false;
    };
    AppComponent.prototype.closeMap = function () {
        this.mapBlock = true;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////
    //公共函数
    AppComponent.prototype.getDismissReason = function (reason) {
        if (reason === __WEBPACK_IMPORTED_MODULE_1__ng_bootstrap_ng_bootstrap__["a" /* ModalDismissReasons */].ESC) {
            return 'by pressing ESC';
        }
        else if (reason === __WEBPACK_IMPORTED_MODULE_1__ng_bootstrap_ng_bootstrap__["a" /* ModalDismissReasons */].BACKDROP_CLICK) {
            return 'by clicking on a backdrop';
        }
        else {
            return "with: " + reason;
        }
    };
    AppComponent.prototype.sureBtnFunction = function (content, result) {
        var _this = this;
        var modalName = Object.keys(content._def.references)[0];
        if (modalName == 'shopImageContent') {
            this.shopImages = this.tempshopImages;
            this.environment = this.tempenvironment;
        }
        if (modalName == 'rentContent') {
            this.shopRent = this.tempshopRent;
            this.rentMeasure = this.temprentMeasure;
            this.payWay = this.temppayWay;
            this.payWayCode = this.tempPayWayCode;
            this.definedPayWay = this.tempdefinedPayWay;
            this.rateWay = this.temprateWay;
            this.definedRateWay = this.tempdefinedRateWay;
            this.depositWay = this.tempdepositWay;
            this.definedDepositWay = this.tempdefinedDepositWay;
            this.rentDate = this.temprentDate;
            this.rentTime = this.temprentTime;
            this.leftContractTime = this.templeftContractTime;
        }
        if (modalName == 'profitContent') {
            this.personProfit = this.temppersonProfit;
            this.dayProfit = this.tempdayProfit;
            this.consumePersonType = this.tempconsumePersonType;
            this.consumeTime = this.tempconsumeTime;
            this.foodAmount = this.tempfoodAmount;
            this.takeOutAmount = this.temptakeOutAmount;
            this.memberAmount = this.tempmemberAmount;
            this.memberType = this.tempmemberType;
        }
        if (modalName == 'transferContent') {
            this.transferStatus = this.temptransferStatus,
                this.transferFee = this.temptransferFee,
                this.isNegotiable = this.tempisNegotiable,
                this.emptyTransfer = this.tempemptyTransfer,
                this.emptyTransferFee = this.tempemptyTransferFee,
                this.transferStaff = this.temptransferStaff,
                this.transferReason = this.temptransferReason;
        }
        if (modalName == 'industryContent') {
            this.defaultIndustryList.splice(0, this.defaultIndustryList.length);
            this.tempdefaultIndustryList.forEach(function (v, i) {
                _this.defaultIndustryList.push(v);
            });
        }
        if (modalName == 'certificationEdit') {
            console.log("certificationEdit:", this.defaultCertification, typeof (this.defaultCertification));
            this.defaultCertification.certificationType = this.selectedCertificationType; //证件类型
            this.defaultCertification.name = this.certificationsTypeList.find(function (item) { return item.id == _this.selectedCertificationType; }).name;
            this.defaultCertification.headImage = this.headImageA[0].url;
            this.defaultCertification.backImage = this.backImageA[0].url;
            this.defaultCertification.otherImages = this.otherImages;
            this.defaultCertification.certificationNumber = this.certificationNumber;
            this.defaultCertification.themeName = this.themeName;
            this.defaultCertification.address = this.address;
            this.defaultCertification.permissionScope = this.permissionScope;
            this.defaultCertification.otherContent = this.otherContent;
        }
        if (modalName == 'personInfo') {
            this.defaultPerson.phoneList = this.phoneList;
            this.defaultPerson.phoneList = this.phoneList;
            this.defaultPerson.name = this.name; //证件类型
            this.defaultPerson.realName = this.realName;
            this.defaultPerson.sex = this.sex;
            this.defaultPerson.birthdayDate = this.birthdayDate;
            this.defaultPerson.contactAddress = this.contactAddress;
            this.defaultPerson.email = this.email;
            this.defaultPerson.qq = this.qq;
            this.defaultPerson.wx = this.wx;
            this.defaultPerson.personInfoDetail = this.personInfoDetail;
        }
    };
    AppComponent.prototype.release = function () {
        var params = {
            shopName: this.shopName,
            brandName: this.brandName,
            subShopName: this.subShopName,
            operateType: this.operateType,
            bigIndustry: this.bigIndustry,
            smallIndustry: this.smallIndustry,
            startOpenDate: this.startOpenDate,
            operateStatus: this.operateStatus,
            endOpenDate: this.endOpenDate,
            shopImages: this.shopImages,
            environment: this.environment,
            shopPhoneNumber: this.shopPhoneNumber,
            takeOutPhone: this.takeOutPhone,
            operateDate: this.operateDate,
            operateStartTime: this.operateStartTime,
            operateEndTime: this.operateEndTime,
            fitmentLevelStatus: this.fitmentLevelStatus,
            serviceProvided: this.serviceProvided,
            shopRent: this.shopRent,
            rentMeasure: this.rentMeasure,
            payWay: this.payWay,
            rateWay: this.rateWay,
            definedRateWay: this.definedRateWay,
            depositWay: this.depositWay,
            rentDate: this.rentDate,
            rentTime: this.rentTime,
            leftContractTime: this.leftContractTime,
            personProfit: this.personProfit,
            dayProfit: this.dayProfit,
            consumePersonType: this.consumePersonType,
            consumeTime: this.consumeTime,
            foodAmount: this.foodAmount,
            takeOutAmount: this.takeOutAmount,
            memberAmount: this.memberAmount,
            memberType: this.memberType,
            transferStatus: this.transferStatus,
            transferFee: this.transferFee,
            emptyTransfer: this.emptyTransfer,
            emptyTransferFee: this.emptyTransferFee,
            transferStaff: this.transferStaff,
            transferReason: this.transferReason,
            certifications: this.certifications,
            shopBoss: this.shopBoss,
            partner: this.partner,
            employee: this.employee,
            city: this.city,
            district: this.district,
            addressDetail: this.addressDetail,
            longitude: this.longitude,
            latitude: this.latitude,
            positionDescription: this.positionDescription,
            isNearStreet: this.isNearStreet,
            superFacility: this.superFacility,
            shopCityName: this.shopCityName,
            buildingArea: this.buildingArea,
            roomArea: this.roomArea,
            doorWidth: this.doorWidth,
            floor: this.floor,
            validArea: this.validArea,
            depth: this.depth,
            floorHeight: this.floorHeight,
            floorAmount: this.floorAmount,
            fitIndustry: this.fitIndustry,
            recommendableIndustry: this.recommendableIndustry,
            unRecommendableIndustry: this.unRecommendableIndustry,
            facilities: this.facilities,
            waterFee: this.waterFee,
            facilityFee: this.facilityFee,
            gasFee: this.gasFee,
            elecFee: this.elecFee,
            rent: this.rent,
            warmFee: this.warmFee,
            buildingShape: this.buildingShape,
            propertyRightType: this.propertyRightType,
            destroyedRatio: this.destroyedRatio,
            destroyedRatioDetail: this.destroyedRatioDetail,
            houseOwner: this.houseOwner //房主
        };
        console.log("params:", params);
    };
    AppComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-root',
            template: __webpack_require__("../../../../../src/app/app.component.html"),
            styles: [__webpack_require__("../../../../../src/app/app.component.css")]
        }),
        __param(1, Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"])('data')),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__ng_bootstrap_ng_bootstrap__["b" /* NgbModal */], Object])
    ], AppComponent);
    return AppComponent;
}());



/***/ }),

/***/ "../../../../../src/app/app.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__ = __webpack_require__("../../../platform-browser/esm5/platform-browser.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ng_bootstrap_ng_bootstrap__ = __webpack_require__("../../../../@ng-bootstrap/ng-bootstrap/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular2_baidu_map__ = __webpack_require__("../../../../angular2-baidu-map/dist/src/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular2_baidu_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_angular2_baidu_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_component__ = __webpack_require__("../../../../../src/app/app.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__component_date_picker_date_picker_component__ = __webpack_require__("../../../../../src/app/component/date-picker/date-picker.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__component_upload_files_upload_files_component__ = __webpack_require__("../../../../../src/app/component/upload-files/upload-files.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__component_baidu_map_baidu_map_component__ = __webpack_require__("../../../../../src/app/component/baidu-map/baidu-map.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__service_request_http_request_service__ = __webpack_require__("../../../../../src/app/service/request/http-request.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__service_data_data_service__ = __webpack_require__("../../../../../src/app/service/data/data.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};












var AppModule = (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_6__app_component__["a" /* AppComponent */],
                __WEBPACK_IMPORTED_MODULE_7__component_date_picker_date_picker_component__["a" /* DatePickerComponent */],
                __WEBPACK_IMPORTED_MODULE_8__component_upload_files_upload_files_component__["a" /* UploadFilesComponent */],
                __WEBPACK_IMPORTED_MODULE_9__component_baidu_map_baidu_map_component__["a" /* BaiduMapComponent */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__["a" /* BrowserModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormsModule */],
                __WEBPACK_IMPORTED_MODULE_4__angular_http__["b" /* HttpModule */],
                __WEBPACK_IMPORTED_MODULE_4__angular_http__["c" /* JsonpModule */],
                __WEBPACK_IMPORTED_MODULE_3__ng_bootstrap_ng_bootstrap__["c" /* NgbModule */].forRoot(),
                __WEBPACK_IMPORTED_MODULE_5_angular2_baidu_map__["BaiduMapModule"].forRoot({ ak: 'fN66w00hfey6hwEyhFcYFRvvwe4a0pOG' })
            ],
            providers: [
                { provide: 'request', useClass: __WEBPACK_IMPORTED_MODULE_10__service_request_http_request_service__["a" /* HttpRequestService */] },
                { provide: 'data', useClass: __WEBPACK_IMPORTED_MODULE_11__service_data_data_service__["a" /* DataService */] }
            ],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_6__app_component__["a" /* AppComponent */]]
        })
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "../../../../../src/app/component/baidu-map/baidu-map.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "baidu-map{\r\n\r\n}\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/component/baidu-map/baidu-map.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n\r\n\r\n\r\n<baidu-map [options]=\"options\" (clicked)=\"mapClick($event)\">\r\n    <marker [point]=\"point\"></marker>\r\n  <!--  <control type=\"navigation\" [options]=\"navOptions\"></control>-->\r\n</baidu-map>\r\n\r\n"

/***/ }),

/***/ "../../../../../src/app/component/baidu-map/baidu-map.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BaiduMapComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_angular2_baidu_map__ = __webpack_require__("../../../../angular2-baidu-map/dist/src/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_angular2_baidu_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_angular2_baidu_map__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var BaiduMapComponent = (function () {
    function BaiduMapComponent() {
        this.options = {
            centerAndZoom: {
                lat: 39.920116,
                lng: 116.403703,
                zoom: 16
            },
            enableKeyboard: true
        };
        this.markers = [
            {
                point: {
                    lat: 31.244604,
                    lng: 121.51606
                }
            },
            {
                point: {
                    lat: 31.246124,
                    lng: 121.51232
                }
            }
        ];
        this.point = {
            lat: 39.920109,
            lng: 116.403705
        };
        this.navOptions = {
            anchor: __WEBPACK_IMPORTED_MODULE_1_angular2_baidu_map__["ControlAnchor"].BMAP_ANCHOR_TOP_RIGHT,
            type: __WEBPACK_IMPORTED_MODULE_1_angular2_baidu_map__["NavigationControlType"].BMAP_NAVIGATION_CONTROL_PAN
        };
    }
    BaiduMapComponent.prototype.mapClick = function (e) {
        console.log("地图：", e);
    };
    BaiduMapComponent.prototype.ngOnInit = function () {
    };
    BaiduMapComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-baidu-map',
            template: __webpack_require__("../../../../../src/app/component/baidu-map/baidu-map.component.html"),
            styles: [__webpack_require__("../../../../../src/app/component/baidu-map/baidu-map.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], BaiduMapComponent);
    return BaiduMapComponent;
}());



/***/ }),

/***/ "../../../../../src/app/component/date-picker/date-picker.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".datePicker-block{\r\n  display: inline-block;\r\n}\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/component/date-picker/date-picker.component.html":
/***/ (function(module, exports) {

module.exports = "<form class=\"form-inline datePicker-block\" >\n  <div class=\"form-group\">\n    <div class=\"input-group\">\n      <input class=\"form-control time-show-input\" placeholder=\"{{placeholder}}\"\n             name=\"dp\" [(ngModel)]=\"date\" (ngModelChange)=\"fireDateChange(date)\" ngbDatepicker #d=\"ngbDatepicker\">\n      <button class=\"input-group-addon\" (click)=\"d.toggle()\" type=\"button\">\n       <!-- <img src=\"img/calendar-icon.svg\" style=\"width: 1.2rem; height: 1rem; cursor: pointer;\"/>-->\n        <i class=\"iconfont icon-calendar\"></i>\n      </button>\n    </div>\n  </div>\n</form>\n\n"

/***/ }),

/***/ "../../../../../src/app/component/date-picker/date-picker.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DatePickerComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var DatePickerComponent = (function () {
    function DatePickerComponent() {
        this.date = '';
        this.placeholder = 'yyyy-mm-dd';
        this.dateChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    DatePickerComponent.prototype.ngOnInit = function () {
    };
    DatePickerComponent.prototype.fireDateChange = function (date) {
        this.dateChange.emit(date);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], DatePickerComponent.prototype, "date", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], DatePickerComponent.prototype, "placeholder", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
    ], DatePickerComponent.prototype, "dateChange", void 0);
    DatePickerComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-date-picker',
            template: __webpack_require__("../../../../../src/app/component/date-picker/date-picker.component.html"),
            styles: [__webpack_require__("../../../../../src/app/component/date-picker/date-picker.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], DatePickerComponent);
    return DatePickerComponent;
}());



/***/ }),

/***/ "../../../../../src/app/component/upload-files/upload-files.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".upload-block{\r\n  display: inline-block;\r\n}\r\n.old-images-block{\r\n  display: inline-block;\r\n  width: 100px;\r\n  position: relative;\r\n}\r\n.new-image-block{\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  width: 45px;\r\n  height: 48px;\r\n  overflow: hidden;\r\n}\r\n.upload-btn{\r\n  line-height: 55px;\r\n  margin-top: -3px;\r\n  margin-left: -3px;\r\n  font-size: 50px;\r\n  width: 50px;\r\n  height: 50px;\r\n  color: #a9a9a9;\r\n}\r\n.img-item-box img{\r\n  width: 100px;\r\n}\r\n\r\ni{\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 5px;\r\n  font-size: 20px;\r\n}\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/component/upload-files/upload-files.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"upload-block\">\n  <div *ngFor=\"let item of images\" class=\"old-images-block\">\n    <a class=\"img-item-box\" href=\"\">\n      <img src=\"{{item.url}}\" alt=\"\">\n    </a>\n    <i class=\"iconfont icon-delete\" (click)=\"deleteNewImage(item)\"></i>\n  </div>\n  <div class=\"new-image-block\" *ngIf=\"multiImages || images.length == 0\">\n    <input  type=\"file\" #newImages multiple accept=\".jpg, .jpeg, .png\" class=\"iconfont icon-tianjiatupian upload-btn\" (change)=\"addImages(newImages.files)\">\n  </div>\n</div>\n"

/***/ }),

/***/ "../../../../../src/app/component/upload-files/upload-files.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UploadFilesComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_toPromise__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/toPromise.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};


var UploadFilesComponent = (function () {
    function UploadFilesComponent(http) {
        this.http = http;
        this.images = []; //数据库中已有的图片
        this.multiImages = true; //上传多张还是单张图片问题,默认为多张
        this.uploadImages = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    UploadFilesComponent.prototype.ngOnInit = function () {
    };
    UploadFilesComponent.prototype.Upload = function (files) {
        var params = {
            files: files
        };
        return this.http.request("upload", params).then(function (result) {
            return new Promise(function (res, rej) {
                (result.message == "上传成功") ? res(result.data) : rej(result);
            });
        });
    };
    /*添加新图片*/
    UploadFilesComponent.prototype.addImages = function (files) {
        var _this = this;
        this.Upload(files).then(function (res) {
            _this.images.concat(res);
        });
        this.uploadImages.emit(this.images);
    };
    /*删除图片（注：新图片需要上传和就图片格式是不一样的需要单独存储）*/
    UploadFilesComponent.prototype.deleteNewImage = function (item) {
        var _this = this;
        this.images.forEach(function (v, i) {
            item.url.toString().trim() == v.url.toString().trim() ? _this.images.splice(i, 1) : '';
        });
        this.uploadImages.emit(this.images);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], UploadFilesComponent.prototype, "images", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], UploadFilesComponent.prototype, "multiImages", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
    ], UploadFilesComponent.prototype, "uploadImages", void 0);
    UploadFilesComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-upload-files',
            template: __webpack_require__("../../../../../src/app/component/upload-files/upload-files.component.html"),
            styles: [__webpack_require__("../../../../../src/app/component/upload-files/upload-files.component.css")]
        }),
        __param(0, Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"])('request')),
        __metadata("design:paramtypes", [Object])
    ], UploadFilesComponent);
    return UploadFilesComponent;
}());



/***/ }),

/***/ "../../../../../src/app/service/data/data.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DataService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_toPromise__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/toPromise.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};


var DataService = (function () {
    function DataService(http) {
        this.http = http;
    }
    DataService.prototype.getWeekData = function () {
        return [
            { code: 1, name: "周一", checked: false },
            { code: 2, name: "周二", checked: false },
            { code: 3, name: "周三", checked: false },
            { code: 4, name: "周四", checked: false },
            { code: 5, name: "周五", checked: false },
            { code: 6, name: "周六", checked: false },
            { code: 7, name: "周日", checked: false }
        ];
    };
    DataService.prototype.getServiceList = function () {
        return [
            { code: 1, name: "可刷卡", checked: false },
            { code: 2, name: "支付宝", checked: false },
            { code: 3, name: "微信", checked: false },
            { code: 4, name: "包间", checked: false },
            { code: 5, name: "WIFI", checked: false },
            { code: 6, name: "可订座", checked: false },
            { code: 7, name: "外卖", checked: false },
            { code: 8, name: "机打发票", checked: false },
            { code: 9, name: "手撕发票", checked: false }
        ];
    };
    DataService.prototype.getPayWayList = function () {
        return [
            { code: 1, name: "一月一付" },
            { code: 2, name: "1月一付" },
            { code: 3, name: "2月一付" },
            { code: 4, name: "3月一付" },
            { code: 5, name: "半年一付" },
            { code: 6, name: "1年一付" },
            { code: 0, name: "自定义" }
        ];
    };
    DataService.prototype.getDepositList = function () {
        return [
            { code: 1, name: "1月租金", checked: false },
            { code: 2, name: "2月租金", checked: false },
            { code: 3, name: "3月租金", checked: false },
            { code: 3, name: "3月租金", checked: false },
            { code: 0, name: "自定义" }
        ];
    };
    DataService.prototype.getFacilities = function () {
        return [
            { code: 1, name: "可明火", checked: false },
            { code: 2, name: "380V电压", checked: false },
            { code: 3, name: "电梯", checked: false },
            { code: 4, name: "暖气", checked: false },
            { code: 5, name: "上水", checked: false },
            { code: 6, name: "排烟", checked: false },
            { code: 7, name: "中央空调", checked: false },
            { code: 8, name: "天然气", checked: false },
            { code: 9, name: "外边去", checked: false }
        ];
    };
    /*获取行业数据*/
    DataService.prototype.getIndustryData = function (params) {
        return this.http.request("get_industry", params).then(function (res) {
            return JSON.parse(res._body).result;
        });
    };
    /*获取区域城市等数据*/
    DataService.prototype.getDistrictData = function (params) {
        return this.http.request("get_city", params).then(function (res) {
            return JSON.parse(res._body).result;
        });
    };
    /*获取建筑形状*/
    DataService.prototype.getBuildingShapeData = function (params) {
        return this.http.request("get_shape_type", params).then(function (res) {
            return JSON.parse(res._body).result;
        });
    };
    /*获取转让状态列表*/
    DataService.prototype.getTransferStatusData = function (params) {
        return this.http.request("get_transfer_status", params).then(function (res) {
            return JSON.parse(res._body).result;
        });
    };
    /*获取位置描述*/
    DataService.prototype.getPositionDesData = function (params) {
        return this.http.request("get_add_desc", params).then(function (res) {
            return JSON.parse(res._body).result;
        });
    };
    DataService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __param(0, Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"])('request')),
        __metadata("design:paramtypes", [Object])
    ], DataService);
    return DataService;
}());



/***/ }),

/***/ "../../../../../src/app/service/request/http-request.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HttpRequestService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_toPromise__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/toPromise.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var HttpRequestService = (function () {
    function HttpRequestService(http) {
        this.http = http;
        this.josnrpConfig = {
            rpcUrl: 'http://192.168.1.234:5544/selectOption',
            id: 0,
            jsonrpc: "2.0"
        };
    }
    HttpRequestService.prototype.guide = function () {
        function s4() {
            return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
        }
        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
    };
    HttpRequestService.prototype.request = function (method, params) {
        return this.http.post(this.josnrpConfig.rpcUrl, {
            id: this.josnrpConfig.id,
            jsonrpc: this.josnrpConfig.jsonrpc,
            method: method,
            params: params
        }).toPromise();
    };
    HttpRequestService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Http */]])
    ], HttpRequestService);
    return HttpRequestService;
}());



/***/ }),

/***/ "../../../../../src/environments/environment.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.
var environment = {
    production: false
};


/***/ }),

/***/ "../../../../../src/main.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__ = __webpack_require__("../../../platform-browser-dynamic/esm5/platform-browser-dynamic.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_app_module__ = __webpack_require__("../../../../../src/app/app.module.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_environment__ = __webpack_require__("../../../../../src/environments/environment.ts");




if (__WEBPACK_IMPORTED_MODULE_3__environments_environment__["a" /* environment */].production) {
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["enableProdMode"])();
}
Object(__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_2__app_app_module__["a" /* AppModule */])
    .catch(function (err) { return console.log(err); });


/***/ }),

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("../../../../../src/main.ts");


/***/ })

},[0]);
//# sourceMappingURL=main.bundle.js.map